trigger:
  - master

variables:
  GOBIN:  '$(GOPATH)/bin'
  GOPATH: '$(system.defaultWorkingDirectory)/gopath'
  MODULEPATH: '$(GOPATH)/src/github.com/artifactory/terraform-provider-artifactory'
  GOVERSION: '1.15.3'
  REPONAME: 'tfp-nonprod-generic-local'
  SERVICE_CONNECTION_NAME: 'Artifactory'
  ACCTESTGROUPS: 'data_sources'
  ORG_NAME: 'colesdev'
  PROMOTION_REPO_TARGET: 'tfp-prod-generic-local'
  PROMOTION_REPO_SOURCE: 'tfp-nonprod-generic-local'
  PROJECT_PREFIX: 'TFP'

steps:
- task: GoTool@0
  displayName: 'GO Install'
  inputs:
    version: $(GOVERSION)
- script: |
    mkdir -p '$(GOBIN)'
    mkdir -p '$(GOPATH)/pkg'
    mkdir -p '$(MODULEPATH)'
    shopt -s extglob
    mv !(gopath) '$(MODULEPATH)'
    mv .[!.]* '$(MODULEPATH)'
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Configure GO Workspace'

- task: Bash@3
  name: 'CheckFormat'
  displayName: 'Check Format'
  inputs:
    filePath: '$(MODULEPATH)/scripts/gofmtcheck.sh'

- task: Bash@3
  name: 'UnitTest'
  displayName: 'Unit Test'
  inputs:
    targetType: 'inline'
    script: |
      go get github.com/jstemmer/go-junit-report
      go get github.com/axw/gocov/gocov
      go get github.com/AlekSi/gocov-xml
      go test ./... -v -coverprofile=coverage.out -covermode count -timeout=30s -parallel=4 2>&1 | go-junit-report > report.xml
      gocov convert coverage.out > coverage.json
      gocov-xml < coverage.json > coverage.xml
    workingDirectory: '$(MODULEPATH)'

- task: PublishTestResults@2
  displayName: 'Publish Test Results'
  inputs:
    testRunner: JUnit
    testResultsFiles: $(System.DefaultWorkingDirectory)/**/report.xml

- task: SonarQubePrepare@4
  displayName: Sonar Qube - Prepare
  inputs:
    SonarQube: 'SonarQube'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'tfp-web'
    cliProjectName: 'TFP-Web'
    cliSources: '$(System.DefaultWorkingDirectory)'
    extraProperties: | 
      sonar.go.coverage.reportPaths=$(MODULEPATH)/coverage.out
      sonar.scm.exclusions.disabled=true
      sonar.sources=$(MODULEPATH)
      sonar.exclusions=**/*.java

- task: SonarQubeAnalyze@4
  displayName: Sonar Qube - Analyze

- task: SonarQubePublish@4
  displayName: Sonar Qube - Upload Report
  inputs:
    pollingTimeoutSec: '300'

- task: Bash@3
  name: 'BuildProiver'
  displayName: 'Build Provider'
  inputs:
    targetType: 'inline'
    script: |
      VERSION=$(git describe --tags --abbrev=0)
      BUILD_ARTIFACT="terraform-provider-artifactory_${VERSION}"
      mkdir bin
      go build -o "bin/$BUILD_ARTIFACT"
    workingDirectory: '$(MODULEPATH)'

- task: ArtifactoryGenericUpload@2
  name: 'ArtifactoryUpload'
  displayName: 'Artifactory Upload'
  inputs:
    artifactoryService: '$(SERVICE_CONNECTION_NAME)'
    specSource: 'taskConfiguration'
    fileSpec: |
      {
        "files": [
          {
            "pattern": "$(MODULEPATH)/bin/terraform-provider-artifactory_v*",
            "target": "$(REPONAME)"
          }
        ]
      }
    collectBuildInfo: true
    buildName: 'TFP-$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    failNoOp: true

- task: ArtifactoryPublishBuildInfo@1
  inputs:
    artifactoryService: '$(SERVICE_CONNECTION_NAME)'
    buildName: 'TFP-$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'

- task: ArtifactoryBuildPromotion@1
  inputs:
    artifactoryService: $(SERVICE_CONNECTION_NAME)
    buildName: '$(PROJECT_PREFIX)-$(Build.DefinitionName)'
    buildNumber: '$(Build.BuildNumber)'
    targetRepo: '$(PROMOTION_REPO_TARGET)'
    status: 'Released'
    sourceRepo: '$(PROMOTION_REPO_SOURCE)'
    includeDependencies: false
    copy: true
    dryRun: false

# sonar
# acctest and publish
# coverage
# artifactory tools
